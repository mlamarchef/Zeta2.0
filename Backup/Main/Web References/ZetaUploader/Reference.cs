//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.42.
// 
#pragma warning disable 1591

namespace ZetaHelpDesk.Main.ZetaUploader {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CommunicationSoap", Namespace="http://zetauploader.zeta-software.de/webservices/")]
    public partial class Communication : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SendFileExOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendFileOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Communication() {
            this.Url = global::ZetaHelpDesk.Main.Properties.Settings.Default.ZetaHelpDesk_Main_ZetaUploader_Communication;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SendFileExCompletedEventHandler SendFileExCompleted;
        
        /// <remarks/>
        public event SendFileCompletedEventHandler SendFileCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://zetauploader.zeta-software.de/webservices/SendFileEx", RequestNamespace="http://zetauploader.zeta-software.de/webservices/", ResponseNamespace="http://zetauploader.zeta-software.de/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendFileEx(SendFileInformation sendInfo) {
            this.Invoke("SendFileEx", new object[] {
                        sendInfo});
        }
        
        /// <remarks/>
        public void SendFileExAsync(SendFileInformation sendInfo) {
            this.SendFileExAsync(sendInfo, null);
        }
        
        /// <remarks/>
        public void SendFileExAsync(SendFileInformation sendInfo, object userState) {
            if ((this.SendFileExOperationCompleted == null)) {
                this.SendFileExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendFileExOperationCompleted);
            }
            this.InvokeAsync("SendFileEx", new object[] {
                        sendInfo}, this.SendFileExOperationCompleted, userState);
        }
        
        private void OnSendFileExOperationCompleted(object arg) {
            if ((this.SendFileExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendFileExCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://zetauploader.zeta-software.de/webservices/SendFile", RequestNamespace="http://zetauploader.zeta-software.de/webservices/", ResponseNamespace="http://zetauploader.zeta-software.de/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendFile(string fileName, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] fileContent, string receiverEMailAddresses, string additionalRemarks) {
            this.Invoke("SendFile", new object[] {
                        fileName,
                        fileContent,
                        receiverEMailAddresses,
                        additionalRemarks});
        }
        
        /// <remarks/>
        public void SendFileAsync(string fileName, byte[] fileContent, string receiverEMailAddresses, string additionalRemarks) {
            this.SendFileAsync(fileName, fileContent, receiverEMailAddresses, additionalRemarks, null);
        }
        
        /// <remarks/>
        public void SendFileAsync(string fileName, byte[] fileContent, string receiverEMailAddresses, string additionalRemarks, object userState) {
            if ((this.SendFileOperationCompleted == null)) {
                this.SendFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendFileOperationCompleted);
            }
            this.InvokeAsync("SendFile", new object[] {
                        fileName,
                        fileContent,
                        receiverEMailAddresses,
                        additionalRemarks}, this.SendFileOperationCompleted, userState);
        }
        
        private void OnSendFileOperationCompleted(object arg) {
            if ((this.SendFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://zetauploader.zeta-software.de/webservices/")]
    public partial class SendFileInformation {
        
        private string fileNameField;
        
        private byte[] fileContentField;
        
        private string[] receiverEMailAddressesField;
        
        private string eMailSubjectField;
        
        private string eMailBodyField;
        
        private string additionalRemarksField;
        
        /// <remarks/>
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] FileContent {
            get {
                return this.fileContentField;
            }
            set {
                this.fileContentField = value;
            }
        }
        
        /// <remarks/>
        public string[] ReceiverEMailAddresses {
            get {
                return this.receiverEMailAddressesField;
            }
            set {
                this.receiverEMailAddressesField = value;
            }
        }
        
        /// <remarks/>
        public string EMailSubject {
            get {
                return this.eMailSubjectField;
            }
            set {
                this.eMailSubjectField = value;
            }
        }
        
        /// <remarks/>
        public string EMailBody {
            get {
                return this.eMailBodyField;
            }
            set {
                this.eMailBodyField = value;
            }
        }
        
        /// <remarks/>
        public string AdditionalRemarks {
            get {
                return this.additionalRemarksField;
            }
            set {
                this.additionalRemarksField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void SendFileExCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void SendFileCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591